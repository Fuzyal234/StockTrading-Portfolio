generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "darwin-arm64", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  password  String
  name      String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  portfolio Portfolio?
  trades    Trade[]
}

model Portfolio {
  id          Int             @id @default(autoincrement())
  userId      Int             @unique
  user        User            @relation(fields: [userId], references: [id])
  totalValue  Float           @default(0)
  totalProfit Float           @default(0)
  lastUpdated DateTime        @updatedAt
  holdings    PortfolioStock[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model Stock {
  id            Int             @id @default(autoincrement())
  symbol        String          @unique
  name          String
  currentPrice  Float
  lastUpdated   DateTime        @updatedAt
  holdings      PortfolioStock[]
  trades        Trade[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model PortfolioStock {
  id            Int       @id @default(autoincrement())
  portfolioId   Int
  stockId       Int
  quantity      Int
  avgPrice      Float
  currentValue  Float
  profit        Float
  portfolio     Portfolio @relation(fields: [portfolioId], references: [id])
  stock         Stock     @relation(fields: [stockId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@unique([portfolioId, stockId])
}

model Trade {
  id        Int      @id @default(autoincrement())
  userId    Int
  stockId   Int
  type      String   // "BUY" or "SELL"
  quantity  Int
  price     Float
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  stock     Stock    @relation(fields: [stockId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}